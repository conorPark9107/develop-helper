plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.albionhelper'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// data jpa, mariaDB jdbc
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.5.0' // mariaDB
	implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.1.0' // Hibernate Validation

	implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Jackson 직렬, 역직렬화 문제 패키지.
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// spring security
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리

}

tasks.named('test') {
	useJUnitPlatform()
}

// 난독화된 JS 파일만 포함하도록 설정
tasks.processResources {
	from('src/main/resouces') {
		exclude '**/node_modules/**' // node_modules 폴더 제외
		exclude '**/package.json'
		exclude '**/package-lock.json'
	}
	from('src/main/resources/static') {
		include '**/*.html'  // HTML 파일 포함
		include '**/*.css'   // CSS 파일 포함
		include '**/*.png'   // 이미지 등 기타 정적 리소스 포함
		exclude '**/js/**'   // 원본 JS 파일 제외
		exclude '**/images.zip'  // 이미지 압축파일.
		exclude '**/jsonData/**' // JSON data
	}
	from('src/main/resources/static/jsMin') {
		include '**/*.js'    // 난독화된 JS 파일 포함
	}
}
